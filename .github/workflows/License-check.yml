name: License Scan  # Nom du workflow

on:
  workflow_dispatch:  # Permet de d√©clencher manuellement le workflow

jobs:
  license-check:
    runs-on: ubuntu-latest  # Ex√©cute sur une machine Ubuntu

    # üîë Permissions n√©cessaires pour l'action publish-unit-test-result
    permissions:
      checks: write  # Permet de cr√©er des "Check Runs" (r√©sultats de tests)
      contents: read  # Permet de lire le code (n√©cessaire pour checkout)

    steps:
      # 1Ô∏è‚É£ T√©l√©charge le code du d√©p√¥t
      - name: Checkout code
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Installe Node.js (si votre projet l'utilise)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18  # Version de Node.js √† installer

      # 3Ô∏è‚É£ Installe les d√©pendances (ex: npm install)
      - name: Install dependencies
        run: npm install

      # 4Ô∏è‚É£ Analyse les licences des d√©pendances
      - name: 'License Scan'
        uses: jmservera/license-finder-action@v0.1.4-alpha
        with:
          permitted-licenses: MIT,Apache-2.0  # Licences autoris√©es
          approved-dependencies: jquery,bootstrap  # D√©pendances approuv√©es

      # 5Ô∏è‚É£ Publie les r√©sultats au format JUnit
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2.10.0
        if: always()  # S'ex√©cute m√™me si les √©tapes pr√©c√©dentes √©chouent
        with:
          junit_files: "license_finder_report.xml"  # Fichier de r√©sultats

      # 6Ô∏è‚É£ Sauvegarde le rapport en tant qu'artefact
      - name: 'Upload Dependency Review Report'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: license-finder-report  # Nom de l'artefact
          path: license_finder_report.xml  # Fichier √† sauvegarder
